#! Float type header
## Implementations for all built in functions

import std.fmt
import std.ops.arith
import std.ops.bitwise
import std.ops.cmp
import std.ops.concat

# String format
impl fmt.Fmt for float:
  # Convert to string
  func str(Self self, str formatspec = "%f") -> str:
    declare:
      # String
      str result
    logic:
      # Call builtin vhdl string formatter
      attr +(vhdl = "strfmt({0}, {1})")
      
      # Return bogus value for FDL type and size checking
      return result

# Implementations for converting
impl float:
      
  ## Convert to uint type
  func to_sint(Self self) -> uint:
    declare:
      uint(self.len()) result
    logic:
      # Builtin source code
      attr +(vhdl = "signed({0})")
      
      # Return bogus value for FDL type and size checking
      return result
      
  ## Convert to float type
  func to_uint(Self self) -> uint:
    declare:
      float result
    logic:
      # Builtin source code
      attr +(vhdl = "real(to_integer({0}))")
      
      # Return bogus value for FDL type and size checking
      return result

    
# Concatenation
impl concat.Concat for uint
