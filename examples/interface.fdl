# Struct and implementation example

interface cool<T>:
  T   producer payload
  bit producer valid
  bit consumer ready
  
trait foobar:
  function is_ready() -> bit
  
impl cool<T>:
  function stuff() -> bit:
    declare:
      bit dummy = '0'
    logic:
      dummy = is_ready()
      return dummy
      
  task bar(bit clk) -> (T, bit):
    declare:
      T stuff
    logic:
      spro(clk):
        stuff = self.payload
      
      return (stuff, self.valid)
      
impl foobar for cool<T>:
  function is_ready() -> bit:
    logic:
      return self.valid and (not ready)
