# Import library with some parameters and datatypes.

import libraryName.structName
import libraryName.busName
# test
import libraryName.customBus # test
import blahLib

module moduleName:
  generics:
    uint          genParam1 = 16
    bitvec[7:0]   genParam2
    #AXIConfig     config
  ports:
    bit           in      clk
    bit           in      rst
    bit           in      din
    #AXI4(config)  master  dataBus
    #AXI4(config)  slave   dummyBus
    bit           out     dout

arch archName:
  signals:
    # Comment
    uint(32)               dummyInt32 = 0
    sint(16)               dummyInt16 = 10
    bitvec[genParam1-1:0]  regVec1 = genParam1*b'0'
    bitvec[3:0]            revVec2 = x'0'
    #bus                    busName(structName)
    
    
  logic:
   
    # Module instantiation
  
    # Asynchronous process example
    apro(clk,rst):
      regVec1[0] = din
    
    apro(clk,rst,"rising",'1'):
      regVec1[1] = din
  
    # Synchronous process example
    spro(clk,rst):
      dout = din
      
    # Traditional process block
    pro:
      # Active low reset
      if (rst = '0'):
        dummyInt32 = 1
        dummyInt16 = 1
      elif rising(clk):
        # Dont need ( = '1,)
        if (regVec[0]):
          # Increment variable
          dummyInt32++
          
          # Increment variable
          dummyInt16+=2
